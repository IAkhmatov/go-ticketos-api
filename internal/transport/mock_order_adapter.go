// Code generated by mockery v2.37.1. DO NOT EDIT.

package transport

import (
	domain "go-ticketos/internal/domain"

	mock "github.com/stretchr/testify/mock"
)

// MockOrderAdapter is an autogenerated mock type for the OrderAdapter type
type MockOrderAdapter struct {
	mock.Mock
}

// ToResponseDTO provides a mock function with given fields: order
func (_m *MockOrderAdapter) ToResponseDTO(order domain.Order) OrderResponseDTO {
	ret := _m.Called(order)

	var r0 OrderResponseDTO
	if rf, ok := ret.Get(0).(func(domain.Order) OrderResponseDTO); ok {
		r0 = rf(order)
	} else {
		r0 = ret.Get(0).(OrderResponseDTO)
	}

	return r0
}

// NewMockOrderAdapter creates a new instance of MockOrderAdapter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockOrderAdapter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockOrderAdapter {
	mock := &MockOrderAdapter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
