// Code generated by mockery v2.37.1. DO NOT EDIT.

package domain

import mock "github.com/stretchr/testify/mock"

// MockEventService is an autogenerated mock type for the EventService type
type MockEventService struct {
	mock.Mock
}

// Create provides a mock function with given fields: props
func (_m *MockEventService) Create(props CreateEventProps) (*Event, error) {
	ret := _m.Called(props)

	var r0 *Event
	var r1 error
	if rf, ok := ret.Get(0).(func(CreateEventProps) (*Event, error)); ok {
		return rf(props)
	}
	if rf, ok := ret.Get(0).(func(CreateEventProps) *Event); ok {
		r0 = rf(props)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*Event)
		}
	}

	if rf, ok := ret.Get(1).(func(CreateEventProps) error); ok {
		r1 = rf(props)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockEventService creates a new instance of MockEventService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockEventService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockEventService {
	mock := &MockEventService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
